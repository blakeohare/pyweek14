/*

on_circuits:
	pick 1 circuit PER CIRCUIT GROUP to indicate that that group should
	always remain on.
	A power input or output pad counts as a circuit so something like...
		---wire---[pad]---wire---
	...is 1 group, not 2.
	
	Format is a list of tuples that are (x, y, and z) coordinates. 
	You can get these from the map editor title bar

moving_platforms:
	directions map to platforms in tile parser order.
	lowest y first, then lowest x, then lowest z
	
	P is pause
*/

function make_sprite(type, col, row, layer) {
	return new Sprite(col * 16 + 8, row * 16 + 8, layer * 8, type);
}

function _hack_do_stuff_99(level, counter) {
	// if (counter == 1) { ...
}

function _hack_introduce_sprites_intro(level, counter) {
	
	if (counter == 120) {
		s = make_sprite('supervisor', 14, 0, 1);
		s.set_automation(new Automation(level, 'intro_supervisor'));
		return [s];
	} else if (counter == 150) {
		s = make_sprite('janitor', 14, 0, 1);
		s.set_automation(new Automation(level, 'intro_janitor'));
		return [s];
	}
	return [];
}

function _hack_do_stuff_intro(playscene, level, counter) {
	if (counter == -1) {
		playscene.player.set_automation(new Automation(level, 'intro_protagonist'));
	}
	
	if (counter == 329 + 14) {
		playscene.next = new DialogScene(playscene, 'intro');
	}
	
	if (counter == 1000) {
		playscene.next = new TransitionScene(playscene, new PlayScene(get_level_manager().get_next_level('intro'), true));
	}
}

class HackHelper {
	static field _level_specific_hacks = {
		'intro': {
			'introduce_sprites': _hack_introduce_sprites_intro,
			'do_stuff': _hack_do_stuff_intro,
			'dialog': { } //'transition_level_one': _hack_dialog_intro_transition_level_one }
		},
		
		'99-0': { },
		
		'9-0': {
			'on_circuits': [
				[1, 2, 0]
			]
		},
		
		'15-0': {
			'moving_platforms': [
				'NW P P SE SE SE P P NW NW', 
				'SW P P NE NE NE P P SW SW'
			]
		},
		
		'16-0': {
			'moving_platforms': [
				'SW SW SW SW SW SW SW P P NE NE NE NE NE NE NE P P',
				'NE NE NE NE P P SW SW SW SW P P',
				'NW NW NW NW P P SE SE SE SE P P'
			]
		},
		
		'17-3': {
			'moving_platforms': [
				'SW SW SW SW SW P P NE NE NE NE NE P P'
			]
		},
		
		'18-0': {
			'moving_platforms': [
				'SE SE NW NW NW NW NW NW NW NW NW NW SE SE SE SE SE SE SE SE',
				'NW NW SE SE SE SE SE SE SE SE SE SE NW NW NW NW NW NW NW NW',
				'NW NW NW NW NW NW NW NW NW SE SE SE SE SE SE SE SE SE SE NW',
				'NW NW NW NW SE SE SE SE SE SE SE SE SE SE NW NW NW NW NW NW',
				'NW NW NW NW NW NW NW SE SE SE SE SE SE SE SE SE SE NW NW NW',
				'NW SE SE SE SE SE SE SE SE SE SE NW NW NW NW NW NW NW NW NW',
				'SE SE SE SE NW NW NW NW NW NW NW NW NW NW SE SE SE SE SE SE',
				'NW NW NW NW NW NW NW SE SE SE SE SE SE SE SE SE SE NW NW NW',
				'SE SE SE SE SE SE SE SE SE SE NW NW NW NW NW NW NW NW NW NW',
				'NW NW SE SE SE SE SE SE SE SE SE SE NW NW NW NW NW NW NW NW',
				'NW NW NW NW NW NW NW NW NW NW SE SE SE SE SE SE SE SE SE SE'
			]
		},
		
		'19c-0': {
			'moving_platforms': [
				'SW SW SW SW SW P P NE NE NE NE NE P P'
			]
		},
		
		'21-0': {
			'moving_platforms': [
				'NW NW P P SE SE SE SE P P NW NW'
			]
		},
		
		'25-0': {
			'moving_platforms': [
				'SE SE NW NW NW NW NW SE SE SE',
				'SE SE SE SE NW NW NW NW NW SE',
				'NW NW NW NW NW SE SE SE SE SE',
				'SE SE NW NW NW NW NW SE SE SE',
				'SE SE SE SE SE NW NW NW NW NW',
				'SE NW NW NW NW NW SE SE SE SE',
				'SE SE SE SE NW NW NW NW NW SE',
				'SE SE SE NW NW NW NW NW SE SE',
				'NW NW NW NW NW SE SE SE SE SE'
			]
		},
		
		'24-0': {
			'moving_platforms': [
				'P P SE SE SE SE SE SE P P NW NW NW NW NW NW',
				'NE P P SW SW P P NE',
				'NE NE NE NE NE NE NE NE P P SW SW SW SW SW SW SW SW P P',
				'P SW SW P P NE NE P'
			]
		},
		
		'90-0': {
			'moving_platforms': [
				'SW SW SW P P NE NE NE P P'
			]
		}
	};
}

function get_hacks_for_level(name, category) {
	dict = HackHelper._level_specific_hacks.get(name);
	if (dict != null) {
		return dict.get(category);
	}
	return null;
}
