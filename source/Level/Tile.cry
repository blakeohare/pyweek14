function flags_contains(flags, items) {
	for (c : items) {
		if (flags.contains(c)) {
			return True;
		}
	}
	return False;
}

class Tile {
	function is_num(string) {
		return '0123456789'.contains(string);
	}
	
	constructor(id, images, height, flags) {
		self.id = id;
		images = images.split('|');
		self.framerate = 4;
		if (self.is_num(images[0][0])) {
			self.framerate = Core.parseInt(images[0]) ?? 0;
			images = images[1:];
		}
		self.hascharge = False;
		
		if (id == '4off') {
			images = ['teslacoil1.png'];
		}
		
		self.tesla = id == '4off' || id == '4';
		self.teslaon = id == '4';
		
		self.images = [];
		for (image : images) {
			self.images.add(get_image('tiles/' + image));
		}

		self.still = len(self.images) == 1;
		self.still_image = self.images[0];
		self.y_offsets = [];
		for (image : self.images) {
			self.y_offsets.add(24 - image.height);
		}

		self.still_y_offset = self.y_offsets[0];
		self.image_count = len(self.images);
		self.height = height;
		self.no_blocks = False;
		self.isholopad = id == 'clone' || id == 'clone2';
		self.pushable = flags_contains(flags, 's');
		self.blocking = flags_contains(flags, 'x');
		self.circuit = flags_contains(flags, 'eh');
		self.actual_circuit = flags_contains(flags, 'e');
		self.stairs = flags_contains(flags, '12345678');
		self.teleporter = id == 't1';
		self.power_input = id == 'pi';
		self.power_output = id == 'po';
		self.isexit = id == '37' || id == '38';
		self.cant_push_over = flags_contains(flags, 'n');
		self.research = id == '41';
		self.goo = id == '42' || id == '43' || id == '44';
		self.isswitch = id == 'pi' || id == 'b1' || id == 'b2' || id == 'b3' || id == 'b4' || id == 'b5' || id == 'b6' || id == 'b7';
		self.powerup = self.research || self.goo;
		self.is_goo = id == '15';
		self.goo_size = 0;
		if (self.goo) {
			self.goo_size = ((Core.parseInt(id) - 41) - 1) * 2 + 1; // 1, 3, 5 OMGHAX
		}
		self.blocking = self.blocking || self.stairs || self.pushable;
		if (self.stairs) {
			self.no_blocks = True;
			double = flags_contains(flags, '5678');
			topo = double ? 2 : 1;
			if (flags_contains(flags, '15')) {
				self.topography = [0, -topo, -topo, 0];
				self.entrance = 'SE';
			} else if (flags_contains(flags, '26')) {
				self.topography = [0, 0, -topo, -topo];
				self.entrance = 'SW';
			} else if (flags_contains(flags, '37')) {
				self.topography = [-topo, 0, 0, -topo];
				self.entrance = 'NW';
			} else if (flags_contains(flags, '48')) {
				self.topography = [-topo, -topo, 0, 0];
				self.entrance = 'NE';
			}
		}
	}
	
	// Code duplicated below
	function get_image(render_counter) {
		if (self.still) {
			return self.still_image;
		}
		i = (render_counter / self.framerate) % self.image_count;
		return self.images[i];
	}

	// Code duplicated above
	function render(screen, x, y, render_counter) {
		if (self.still) {
			img = self.still_image;
			y += self.still_y_offset;
		} else {
			i = (render_counter / self.framerate) % self.image_count;
			img = self.images[i];
			y += self.y_offsets[i];
		}
		
		img.draw(x, y);
	}
}
