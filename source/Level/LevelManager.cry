
function is_story_mode() {
	quiet_mode = 1 == get_persisted_session_int('quiet_mode');
	return !quiet_mode;
}

function get_level_manager() {
	story_mode = is_story_mode();
	i = story_mode ? 1 : 0;
	if (LevelManager._level_manager[i] == null) {
		LevelManager._level_manager[i] = new LevelManager(story_mode);
	}
	return LevelManager._level_manager[i];
}

class LevelManager {

	static field _level_manager = [null, null];

	field ordering;
	
	constructor(story_mode) {
		this.ordering = [
			['1-3', "Lab Entrance", [4, 9, 1, 'ne']],
			['2-3', "Fill 'er up!", [7, 13, 2, 'ne']],
			['2a-0', "Around the Room", [6, 10, 1, 'ne']],
			['3-1', "The Green Room", [9, 10, 1, 'ne']],
			['4-0', "Got the Blues", [5, 8, 1, 'ne']],
			['5-0', "One Block, Two Block", [2, 10, 1, 'ne']],
			['6-0', "Roadblock", [1, 9, 3, 'ne']],
			['7-0', "An Impasse", [1, 11, 3, 'ne']],
			['8-0', "Plug it in", [6, 9, 1, 'ne']],
			['9-0', "Energize", [1, 7, 1, 'ne']],
			['10-2', "You do this IRL", [5, 11, 1, 'ne']],
			['11-0', "Boom?", [1, 4, 3, 'se']],
			['12-0', "A Block Too Far", [1, 10, 3, 'ne']],
			['13-0', "Beam me up, Steve!", [7, 18, 1, 'ne']],
			['14-0', "Blocks in High Places", [5, 10, 3, 'ne']],
			['14a-0', "Jump the River", [4, 10, 2, 'ne']],
			['15-0', "Don't Look Down", [1, 10, 2, 'ne']],
			['16-0', "Islands", [10, 16, 2, 'ne']],
			['17-3', "Block Party", [9, 18, 3, 'ne']],
			['18-0', "Power Overwhelming", [1, 19, 2, 'se']],
			['19a-0', "Like Men", [2, 7, 1, 'se']],
			['19b-1', "Rats in a Maze", [1, 17, 1, 'se']],
			['19c-0', "Co-operation", [2, 24, 3, 'ne']],
			['19-0', "A Shockin Experience", [1, 8, 1, 'se']],
			['20-0', "1.21 \"Jiga\" Watts", [1, 15, 2, 'se']],
			['21-0', "R.O.U.S.", [9, 13, 2, 'ne']],
			['21a-0', "High Voltage", [1, 11, 1, 'se']],
			['flipmaze', "On The Flip Side", [1, 19, 1, 'se']],
			['25-0', "Hunger Game", [1, 12, 1, 'se']],
			['24-0', "Three Blind Mice", [1, 20, 3, 'ne']],
			['26-0', "Mirror Mirror", [1, 9, 1, 'se']],
			['27-0', "Many Me", [1, 9, 1, 'se']],
			['28-0', "Simon Says", [1, 12, 1, 'se']],
			['90-0', "Here There Be Ratmen", [1, 9, 3, 'se']],
			['99-0', "Doctor What?", [8, 4, 1, 'nw']]];
		if (story_mode) {
			this.ordering = [['intro', "Your Cubicle", [12, 14, 1, 'nw']]] + this.ordering;
		}
	}
	
	function get_current_level_index(current_level_name) {
		for (i : py_range(this.ordering.length)) {
			if (this.ordering[i][0] == current_level_name) {
				return i;
			}
		}
		return null;
	}
	
	function get_current_room_name(current_level_name) {
		return this.ordering[this.get_current_level_index(current_level_name)][1];
	}
	
	function get_next_level(current_level_name) {
		i = this.get_current_level_index(current_level_name);
		next_i = i + 1;
		if (next_i < this.ordering.length) {
			return this.ordering[next_i][0];
		}
		return null;
	}
	
	function get_starting_point_for_level(name) {
		i = this.get_current_level_index(name);
		if (this.ordering[i].length >= 3) {
			return this.ordering[i][2];
		}
		return null;
	}
	
	function get_starting_level() {
		return this.ordering[0];
	}
}
