
function MMS_startNewStoryMode() { return new PlayScene('intro', true); }
function MMS_resumeSaved() { return new PlayScene(get_persistent_state().get_string_forever('save_level'), true); }
function MMS_levelPicker() { return new LevelPickerScene(); }
function MMS_configureInput() { return new ConfigureInputScene(); }
function MMS_soundSettings() { return new SettingsScene(); }
function MSS_credits() { return new CreditsScene(true); }
function MMS_exit() { return new GoodbyScene(); }

class MainMenuScene {
	constructor() {
		this.next = self;
		self.index = 0;
		self.first = True;
		has_save_data = get_persisted_forever_string('save_level') != '';
		self.options = [
			('Start New Story Mode', True, MMS_startNewStoryMode),
			('Resume Saved Game', has_save_data, MMS_resumeSaved),
			('Level Picker', True, MMS_levelPicker),
			('Configure Input', True, MMS_configureInput),
			('Sound Settings', True, MMS_soundSettings),
			('Credits', True, MMS_credits),
			('Exit', True, MMS_exit)
			];
	}

	function process_input(events, pressed, axes, mouse) {
		go = False;
		for (event : events) {
			if (event.down) {
				if (event.key == 'down') {
					self.index += 1;
					if (self.index < len(self.options) && !self.options[self.index][1]) {
						self.index += 1;
					}
					if (self.index < len(self.options)) {
						play_sound('menumove');
					} else {
						self.index = len(self.options) - 1;
					}
				} else if (event.key == 'up') {
					self.index -= 1;
					if (!self.options[self.index][1]) {
						self.index -= 1;
					}
					
					if (self.index >= 0) {
						play_sound('menumove');
					} else {
						self.index == 0;
					}
				} else if (event.key == 'start') {
					go = True;
				}
			}
		}
		
		self.index = max(self.index, 0);
		self.index = min(self.index, len(self.options) - 1);
		
		if (go) {
			lamb = self.options[self.index][2];
			next_scene = lamb(None);
			self.next = new TransitionScene(self, next_scene);
		}
	}
	
	function update(counter) {
		get_jukebox().ensure_current_song('title');;
		if (self.first) {
			self.first = False;
			get_persistent_state().session = {};
		}
	}
	
	function render(screen, counter) {
		get_image('misc/title_screen.png').draw(0, 0);
		
		title = get_text("Sudo Science", 36, (255, 255, 255));
		w = title.width;
		h = title.height;
		title.draw(20, 20);
		
		y = h + 30 + 20;
		i = 0;
		for (option : self.options) {
			x = 20;
			color = [190, 190, 190];
			if (self.index == i) {
				Graphics2D.Draw.rectangle(x, y + 5, 5, 5, 255, 255, 255);
			} else if (!option[1]) {
				color = [80, 80, 80];
			}
			x = 30;
			text = get_text(option[0], 18, color);
			text.draw(x, y);
			y += text.height + 10;
			i += 1;
		}
	}
}
